// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario{
  id String @id @default(uuid())
  nome String
  email String
  endereco String?
  senha String
  stripe_customer_id String?

  criado_em DateTime? @default(now())
  atualizado_em DateTime? @default(now())

  @@map("usuarios")
  assinaturas Assinatura?
  consultas Consulta[]
  servico Servico[]
}

model Assinatura {
  id String @id
  status String
  precoId String
  criado_em DateTime? @default(now())
  atualizado_em DateTime? @default(now())

  @@map("assinaturas")
  usuarioId String @unique
  usuario Usuario @relation(fields: [usuarioId], references: [id])
}

model Consulta {
  id String @id @default(uuid())
  nome String
  preco Float
  status Boolean @default(true)
  criado_em DateTime? @default(now())
  atualizado_em DateTime? @default(now())

  @@map("consultas")
  usuario Usuario @relation(fields: [usuario_id], references: [id])
  usuario_id String
  servico Servico[]
}

model Servico {
  id String @id @default(uuid())
  cliente String
  criado_em DateTime? @default(now())
  atualizado_em DateTime? @default(now())

  @@map("services")
  consulta Consulta @relation(fields: [consulta_id], references: [id])
  consulta_id String
  usuario Usuario @relation(fields: [usuario_id], references: [id])
  usuario_id String
}